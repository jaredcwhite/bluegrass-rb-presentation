class: center, middle, white-titles animated fadeIn faster
background-image: url(https://fundraising.bridgetownrb.com/images/bridgetown-background.jpg)

# Bridgetown: Ruby Relevance While Embracing the Frontend
## (and 🤘 rocking that HTML-first lifestyle 🤘)

---
class: animated fadeInRight faster bigger-list bold-list

# Here’s What We’ll Talk About

1. A Brief Introduction
2. Why Bridgetown
3. HTML-First Mindset
4. Sizing Up the “Competition”
5. SSR: Why Use Roda?
6. ActiveRecord? Outside of Rails?!
7. Turbo? Outside of Rails?!
8. Q & A

.right.gray[Presented by Jared White on Tuesday, May 16, 2023]

---
class: center animated fadeIn

# Allow Me To Introduce Myself
--

.avatar[![Jared White](/assets/jared-studio-professional.jpg)]

I’m Jared White, the Founder and Lead Rubyist at [Whitefusion](https://www.whitefusion.studio),  
a boutique web studio based in Portland, OR.

[.github[![Mastodon](/assets/mastodon.svg)]@jaredwhite@indieweb.social](https://indieweb.social/@jaredwhite) .gray[/] [.github[![Github](/assets/github.svg)]@jaredcwhite](https://github.com/jaredcwhite)

I’ve been a Rails dev since 2008, and a Jekyll/Bridgetown site builder since 2015.

And as a designer/developer/blogger in general, since 1997!!! 😱

---
class: animated fadeInRight faster

&nbsp;

.center.spicy-logo[![Spicy Web Logo](https://www.spicyweb.dev/images/spicy-web-logo.svg)]

&nbsp;

* Blog posts & videos about "vanilla" frontend web specifications & techniques
* Discord community to share tips 'n' tricks
* New podcast just dropped: **Just a Spec**
* Upcoming: a subscription platform for courses which do a deep dive into web topics
  * The first one will be all about writing modern, maintainable CSS using design system thinking

.center[🔗 [SpicyWeb.dev](https://www.spicyweb.dev)]

---
class: animated fadeInRight faster

&nbsp;

.center.fullstackruby-logo[![Fullstack Ruby Logo](/assets/fullstackruby.svg)]

&nbsp;

* A blog about Ruby-themed web development topics and “the art of code”
* A podcast about, er, well, all that too 😄
* Join our mailing list of over 300 Ruby developers:

.center[🔗 [FullstackRuby.dev](https://www.fullstackruby.dev)]

---
class: center middle animated zoomIn big

# “Friendly Neighborhood Spider-Man” of Bridgetown

.big[![Bridgetown](https://www.bridgetownrb.com/images/bridgetown-logo-twitter-card.jpg)]

---
class: center middle animated fadeIn big faster

.big[![Bridgetown](https://www.bridgetownrb.com/images/bridgetown-logo-twitter-card.jpg)]

## Bridgetown is the “spiritual successor” to Jekyll and a popular choice for Rubyists building websites and modest applications

---
class: center middle animated fadeInRight

# Features Galore.

.big[![Super-dee-dooper Features](/assets/super-dee-dooper.jpg)]

---
class: center middle animated zoomIn

# “Hybrid Architecture”

![architecture gif](/assets/architecture-building.gif)

---
class: animated fadeIn faster

# SSG vs. SSR

* Static Site Generation (**SSG**): build once for deployment (usually for each Git commit or from a CMS trigger). It's cached "forever".
* Server-Side Rendering (**SSR**): dynamically build and serve HTML for each request, requires a web server (obviously). No caching unless you somehow opt-in.

--

.center[![why not both?](/assets/why-not-both.gif)]

---
class: animated fadeInRight

# SSG _and_ SSR 😃👍

## aka the “DREAMstack”

### (Delightful Ruby Expressing APIs & Markup)

* **SSG**: build key public pages once per deployment, cached "forever" via CDN. In other words, your “**Marketing / Content Site**”
* **SSR**: dynamically build and serve HTML for each request on pages which need CRUD (Create, Read, Update, Delete), user presence, paywalled content, and other up-to-the-minute data. aka your “**Web Application**”
* Use techniques like **Hotwire Turbo**, componentized views, and "island architecture" to infuse static pages with dynamic content.
* Our SSR features are powered by **Roda**, a fast web toolkit with much to recommend it vs. Rails for _some_ projects.

---
class: center middle animated zoomIn faster

# Bridgetown is a fullstack framework. <br /><br/>“Static Site Generator” is a feature.

## (this may take some getting used to…)

---
class: center middle animated fadeInRight faster

<h1 class="colorful">A Word on THE FUTURE OF THE WEB™</h1>

---
class: center middle animated zoomIn faster

# The Future of the Web is:

## React Server Components + Turbopack + Tailwind + Deno + Edge + TypeScript + GraphQL + …

---
class: center middle

# No.

![Bugs Bunny says NO](/assets/bugs-no.jpg)

---
class: center middle animated fadeInRight faster

# Let’s keep pushing a <br/>\*\*polyglot web & standards\*\* forward.

## The Bridgetown Manifesto is: <br/>not “100% vanilla” HTTP/HTML/CSS/JS…but _close_.

---
class: center middle

## (and of course, .twitter[![Ruby](/assets/ruby.svg)] **Ruby**!)

---
class: center middle animated zoomIn big

# As we head towards Bridgetown 2.0…

## …we will be adopting more and more of an <br/>**“HTML-first” mindset**, from the way we write UI components to the way we deliver new frontend features and technologies.

_HTML Modules_ &nbsp; _Declarative Shadow DOM_ &nbsp; _ElementInternals_ &nbsp; _Form Validation API_ &nbsp; _Modern Browser-Native CSS_ &nbsp; _Import Maps & ESM Servers_ &nbsp; _Islands Architecture_

---
class: center middle animated fadeInRight

# So…like, who exactly are we competing with anyway?

---
class: center middle

.medium[![Ruby on Rails](/assets/railslogo.svg)]

# 🤡

---
class: center middle

# No.

![Bugs Bunny says NO](/assets/bugs-no.jpg)

---
class: animated fadeInRight

# Bridgetown Competitors:

---
# Bridgetown Competitors:

* **Gatsby**
--
* **Astro**
--
* **Eleventy**
--
* **Next**
--
* **Nuxt**
--
* **SvelteKit**
--
* (And on and on and on it goes…)

---
class: center middle animated zoomIn big

# Attack of the ~~Clones~~ JS Frameworks

.big[![Frameworks](/assets/javascript_frameworks.jpg)]

---
class: center middle animated zoomIn big

# Web Developer Just Starting Out:

.big[![A New Man, Apparently Free](/assets/new-free-man.jpg)]

## Apparently Free! 😎

---
class: center middle animated zoomIn big

# After Your 30th Framework/Build Tool/Hosting Infra/etc.…

.medium[![Not Free](/assets/not-free.jpg)]

## We’re not here because we’re free… <br/>we’re here because we’re **NOT free!**

---
class: center middle

# Just Say No to Yak Shaving. 😂

.medium[![Yak Intensifies](/assets/yak-intensifies.gif)]

---
class: center middle animated zoomIn big

# Bridgetown: <br/>YARF (Yet Another Ruby Framework)

.medium[![Bridgetown](https://www.bridgetownrb.com/images/bridgetown-logo-twitter-card.jpg)]

## Gotta compete with **YAJSF**, amirite? 🥸

---
class: center middle animated fadeInRight

# But, like, this is a big problem.

## We need a solution which presents a compelling alternative to the frontend-themed YAJSF explosion.

## Rails/Hanami/Jekyll/Middleman/etc. ain’t it.

---
class: center middle animated fadeInRight

# “I built a site using Astro and that was cool and all, but…I really love Ruby. Can I use Bridgetown?”

---
class: center middle

# “I built a site using Astro and that was cool and all, but…I really love Ruby. Can I use Bridgetown?”

# _YES!_ <br />👍

---
class: animated fadeInRight

# Bridgetown: SSG & SSR

## The SSR Functionality is Powered by **Roda**

* [The Routing Tree Web Toolkit](http://roda.jeremyevans.net), created by Jeremy Evans
* **Simplicity**: Roda is designed to be simple, both internally and externally, reducing cognitive overhead.
* **Usability**: Roda uses a routing tree. At any point during routing, it allows you to operate on the current request.
* **Productivity**: Roda makes it easy to develop applications quickly.

---
class: animated fadeInRight

# Roda route blocks:

```ruby
class App < Roda
  route do |r|
    # /hello branch
    r.on "hello" do
      # Set variable for all routes in /hello branch
      @greeting = 'Hello'

      # GET /hello/world request
      r.get "world" do
        "#{@greeting} world!"
      end

      # /hello request
      r.is do
        # GET /hello request
        r.get do
          "#{@greeting}!"
        end

        # POST /hello request
        r.post do
          @name = r.params["name"]
          puts "#{@greeting} #{@name}!"
          r.redirect
        end
      end
    end
  end
end
```

---
class: center middle animated zoomIn

# Bridgetown provides an “opinionated distribution” of Roda

## With some extra features. Most notably: <br/>**File-Based Routing**

```
_routes/items/index.erb
_routes/items/[slug].erb

_routes/books/[slug]/chapter/[chapter].erb
```

---
class: animated fadeInRight

# Roda + Bridgetown in action

`_routes/items/[slug].erb`

```erb
---<%

# route: /items/:slug
r.get do
  item_id, *item_sku = params[:slug].split("-")
  item_sku = item_sku.join("-")

  render_with data: {
    layout: :page,
    title: "Item Page",
    item_id: item_id,
    item_sku: item_sku
  }
end
%>---

<p><strong>Item ID:</strong> <%= data.item_id %></p>

<p><strong>Item SKU:</strong> <%= data.item_sku %></p>
```

---
# Roda + Bridgetown in action

`_routes/items/[slug].erb`

```erb
---<%  # <== This looks like front matter!

# route: /items/:slug
r.get do
  item_id, *item_sku = params[:slug].split("-")
  item_sku = item_sku.join("-")

  render_with data: {    # <== This provides data to the template below
    layout: :page,
    title: "Item Page",
    item_id: item_id,
    item_sku: item_sku
  }
end
%>---

<p><strong>Item ID:</strong> <%= data.item_id %></p>   <== Roda data var

<p><strong>Item SKU:</strong> <%= data.item_sku %></p> <== Roda data var
```

---
class: center middle animated zoomIn

# We're continuing to invest in our Roda integration as well as better documentation.

## Next: some key plugins to aid your CRUD, including:

---
class: center middle animated zoomIn faster

# Active Record

.fullstackruby-logo[![Ruby on Rails](/assets/railslogo.svg)]

---
class: center middle animated zoomIn faster

# .fullstackruby-logo[![Turbo](/assets/turbo-logo.svg)]

## (Primarily **Stream** responses running over HTTP.)

### P.S. Custom Actions are the bees’ knees.

---
class: center middle animated zoomIn faster

# 🧬 Lifeform

## A new form component library in development, powered by **Phlex**. Compatible with both Bridgetown _and_ Rails (replacing all previous form helpers).

### Define forms as objects using a simple DSL, then render those forms potentially as one-liners. Never wrestle with horrible form template markup again! 🙌

---
class: animated fadeInRight faster

# 🧬 Lifeform in action:

```ruby
class Forms::Movie < Lifeform::Form
  field :title,
        label: "Title (required)",
        required: true,
        autofocus: true
  field :year,
        label: "Year (required)",
        required: true
  field :director,
        label: "Director"

  field :submit, type: :submit_button, label: "Save"
end
```

```erb
<%= render Forms::Movie.new(data.movie) %>
```

---
class: animated fadeInRight faster

# 🧬 Lifeform features

* Mix 'n' match fields from various component libraries. Will ship with a "default" vanilla one and one for Shoelace.
* Easily write your own field types using Phlex templates.
* Framework-agnostic: not only Bridgetown or Rails, but potentially any Ruby web framework.
* If you need more rendering flexibility than the "one-liner", you can render any field out individually in any order and even override specific options.

---
class: animated fadeInRight

# Bridgetown SSR / CRUD

* Progressively enhance your static/public content with all the extra bits.
  * Forms
  * E-commerce
  * Paywalls
  * Dashboards
  * Digital Products
  * Anything which doesn't map cleanly to static builds.

* See how far you can push this stack before reaching for “The Big Kahuna” (Rails?)
* You can always rewrite your backend later and still use Bridgetown for the frontend. I know this because Jekyll + Rails installs used to be my jam!

---
class: center middle animated zoomIn big

# And That’s Bridgetown.

.medium[![Bridgetown](https://www.bridgetownrb.com/images/bridgetown-logo-twitter-card.jpg)]

## Open for business in 2023 and beyond.

---
class: center middle animated fadeInRight faster

# Questions?

.avatar[![Bridgetown Logo](/assets/bridgetown-avatar.svg)]

## **[www.bridgetownrb.com](https://www.bridgetownrb.com)**
